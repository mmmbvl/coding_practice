

A rectangle is can be defined by two factors: height and width.

Its area is defined as the multiplication of the two: height * width.

Its perimeter is the sum of its four edges: height + height + width + width.

It is possible to create rectangles of the same area but different perimeters. For example, given an area of 45, the possible heights, widths and resultant perimeters would be:

(1, 45) = 92

(9, 5) = 28

(15, 3) = 36

Note that (6, 7.5) has an area of 45 too, but is discarded in this kata because its width is non integral.

The task is to write a function that, given an area as a positive integer, returns the smallest perimeter possible of a rectangle with integral side lengths.
Input range:

1 <= area <= 5 x 10 ^ 10
Fundamentals
Algorithms


function minimumPerimeter(area) {
  let s = Math.floor(Math.sqrt(area))
  while (Math.floor(area / s) != area / s) {
    s--
  }
  return 2 * (s + (area / s))
  // Your code here
}

const chai = require("chai");
const assert = chai.assert;

function dotest(n, expected) {
  assert.deepEqual(minimumPerimeter(n), expected, `Test failed with area = ${n}`)
}

describe("Testing", function() {
  it("Sample tests", function() {
      dotest(45, 28);
      dotest(30, 22);
      dotest(81, 36);
      dotest(89, 180);
  });
});
