Let's pretend your company just hired your friend from college and paid you a referral bonus. Awesome! To celebrate, you're taking your team out to the terrible dive bar next door and using the referral bonus to buy, and build, the largest three-dimensional beer can pyramid you can. And then probably drink those beers, because let's pretend it's Friday too.

A beer can pyramid will square the number of cans in each level - 1 can in the top level, 4 in the second, 9 in the next, 16, 25...

Complete the beeramid function to return the number of complete levels of a beer can pyramid you can make, given the parameters of:

    your referral bonus, and

    the price of a beer can

For example:

beeramid(1500, 2); // should === 12
beeramid(5000, 3); // should === 16

Source: Codewars

// Returns number of complete beeramid levels
var beeramid = function(bonus, price) {
  let cans = Math.floor(bonus / price)
  let levels = 0
  while (cans >= (levels ** 2)) {
    cans -= (levels ** 2)
    levels++
  }
  return levels > 0 ? levels - 1 : 0
}

describe("fixed tests", () => {
  Test.assertEquals(beeramid(9, 2), 1);
  Test.assertEquals(beeramid(10, 2), 2);
  Test.assertEquals(beeramid(11, 2), 2);
  Test.assertEquals(beeramid(21, 1.5), 3);
  Test.assertEquals(beeramid(454, 5), 5);
  Test.assertEquals(beeramid(455, 5), 6);
  Test.assertEquals(beeramid(4, 4), 1);
  Test.assertEquals(beeramid(3, 4), 0);
  Test.assertEquals(beeramid(0, 4), 0);
  Test.assertEquals(beeramid(-1, 4), 0);
});
